grafana:
 service:
   type: LoadBalancer
   annotations:
     service.beta.kubernetes.io/aws-load-balancer-type: nlb
     service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
     service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
   ports:
     - port: 80
       targetPort: 3000
       protocol: TCP
 persistence:
   enabled: true
   size: 10Gi
   storageClassName: gp2
 resources:
   limits:
     cpu: 500m
     memory: 512Mi
   requests:
     cpu: 200m
     memory: 256Mi
 adminUser: admin
 adminPassword: admin
 datasources:
   datasources.yaml:
     apiVersion: 1
     deleteDatasources:
       - name: Prometheus
         orgId: 1
       - name: Loki
         orgId: 1
     datasources:
       - name: Prometheus
         type: prometheus
         url: http://monitoring-prometheus-server
         access: proxy
         isDefault: true
         jsonData:
           timeInterval: "30s"
           queryTimeout: "30s"
           httpMethod: "POST"
           exemplarTraceIdDestinations:
             - name: trace_id
               datasourceUid: tempo
       - name: Loki
         type: loki
         url: http://monitoring-loki:3100
         access: proxy
         jsonData:
           maxLines: 1000
           timeout: 30
 dashboardProviders:
   dashboardproviders.yaml:
     apiVersion: 1
     providers:
       - name: 'default'
         orgId: 1
         folder: ''
         type: file
         disableDeletion: false
         editable: true
         options:
           path: /var/lib/grafana/dashboards

prometheus:
 alertmanager:
   enabled: false
 server:
   persistentVolume:
     enabled: true
     size: 10Gi
     storageClassName: gp2
   service:
     type: LoadBalancer
     annotations:
       service.beta.kubernetes.io/aws-load-balancer-type: nlb
       service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
       service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
   resources:
     limits:
       cpu: 1000m
       memory: 2Gi
     requests:
       cpu: 500m
       memory: 1Gi
   retention: 15d
   global:
     scrape_interval: 15s
     evaluation_interval: 15s
   scrape_configs:
     - job_name: 'kubernetes-pods'
       kubernetes_sd_configs:
         - role: pod
       relabel_configs:
         - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
           action: keep
           regex: true
         - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
           action: replace
           target_label: __metrics_path__
           regex: (.+)
         - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
           action: replace
           regex: ([^:]+)(?::\d+)?;(\d+)
           replacement: $1:$2
           target_label: __address__
         - source_labels: [__meta_kubernetes_namespace]
           action: replace
           target_label: kubernetes_namespace
         - source_labels: [__meta_kubernetes_pod_name]
           action: replace
           target_label: kubernetes_pod_name

loki:
 enabled: true
 singleBinary:
   enabled: true
   replicas: 1
 persistence:
   enabled: true
   size: 10Gi
   storageClass: gp2
 resources:
   limits:
     cpu: 1000m
     memory: 2Gi
   requests:
     cpu: 500m
     memory: 1Gi
 monitoring:
   selfMonitoring:
     enabled: false
     grafanaAgent:
       installOperator: false
 config:
   auth_enabled: false
   common:
     path_prefix: /loki
     storage:
       filesystem:
         chunks_directory: /var/loki/chunks
         rules_directory: /var/loki/rules
   limits_config:
     retention_period: 336h # 14 days
     enforce_metric_name: false
     reject_old_samples: true
     reject_old_samples_max_age: 168h
     max_entries_limit_per_query: 5000
   schema_config:
     configs:
       - from: "2023-01-01"
         store: boltdb-shipper
         object_store: filesystem
         schema: v12
         index:
           prefix: index_
           period: 24h

promtail:
 enabled: true
 config:
   clients:
     - url: http://monitoring-loki:3100/loki/api/v1/push
   positions:
     filename: /run/promtail/positions.yaml
   scrape_configs:
     - job_name: kubernetes-pods
       kubernetes_sd_configs:
         - role: pod
       pipeline_stages:
         - docker: {}
       relabel_configs:
         - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
           action: keep
           regex: true
         - source_labels: [__meta_kubernetes_pod_container_name]
           target_label: container
         - source_labels: [__meta_kubernetes_pod_name]
           target_label: pod
         - source_labels: [__meta_kubernetes_namespace]
           target_label: namespace
         - source_labels: [__meta_kubernetes_pod_node_name]
           target_label: node_name
 resources:
   limits:
     cpu: 500m
     memory: 512Mi
   requests:
     cpu: 200m
     memory: 256Mi
 tolerations:
   - operator: Exists