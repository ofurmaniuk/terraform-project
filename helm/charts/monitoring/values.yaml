grafana:
  service:
    type: LoadBalancer
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: nlb
      service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
      service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    ports:
      - port: 80
        targetPort: 3000
        protocol: TCP
  persistence:
    enabled: true
    size: 10Gi
    storageClassName: gp2
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi
  adminUser: admin
  adminPassword: admin
  datasources:
    datasources.yaml:
      apiVersion: 1
      deleteDatasources:
        - name: Prometheus
          orgId: 1
        - name: Loki
          orgId: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://monitoring-prometheus-server
          access: proxy
          isDefault: true
        - name: Loki
          type: loki
          url: http://monitoring-loki:3100
          access: proxy
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards

prometheus:
  alertmanager:
    enabled: false
  server:
    persistentVolume:
      enabled: true
      size: 10Gi
      storageClassName: gp2
    service:
      type: LoadBalancer
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: nlb
        service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
        service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi

loki:
  enabled: true
  auth_enabled: false
  write_enabled: true
  singleBinary:
    enabled: true
    replicas: 2
    extraArgs:
      - --config.expand-env=true
      - --config.file=/etc/loki/config/config.yaml

  persistence:
    enabled: true
    size: 10Gi
    storageClassName: gp2

  resources:
    limits:
      cpu: 1000m 
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi

  commonConfig:
    replication_factor: 1
    ring:
      instance_addr: 127.0.0.1
      kvstore:
        store: inmemory

  storage:
    type: filesystem
    chunks_directory: /data/loki/chunks
    filesystem:
      directory: /data/loki/chunks

  schemaConfig:
    configs:
      - from: "2020-10-24"
        store: boltdb-shipper
        object_store: filesystem
        schema: v11
        index:
          prefix: index_
          period: 24h

  storageConfig:
    boltdb_shipper:
      active_index_directory: /data/loki/index
      cache_location: /data/loki/cache
      shared_store: filesystem

  limits_config:
    ingestion_rate_mb: 10
    ingestion_burst_size_mb: 20
    max_global_streams_per_user: 5000
    reject_old_samples: true
    reject_old_samples_max_age: 168h

promtail:
  enabled: true
  config:
    server:
      http_listen_port: 3101
    clients:
      - url: http://monitoring-loki:3100/loki/api/v1/push
        tenant_id: "fake"
    positions:
      filename: /run/promtail/positions.yaml
    scrape_configs:
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
          - role: pod
        pipeline_stages:
          - cri: {}
        relabel_configs:
          - source_labels: 
            - __meta_kubernetes_pod_node_name
            target_label: node_name
          - source_labels:
            - __meta_kubernetes_namespace
            target_label: namespace
          - source_labels: 
            - __meta_kubernetes_pod_name
            target_label: pod
          - source_labels:
            - __meta_kubernetes_container_name
            target_label: container
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
            target_label: app
          - action: drop
            regex: ''
            source_labels:
              - app
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_component
            target_label: component
          - action: replace
            replacement: $1
            separator: /
            source_labels:
              - namespace
              - app
            target_label: job
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_name
            target_label: instance
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
              - __meta_kubernetes_pod_uid
              - __meta_kubernetes_pod_container_name
            target_label: __path__

  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi