nameOverride: monitoring
fullnameOverride: monitoring

prometheus:
  server:
    persistentVolume:
      enabled: true
      size: 4Gi
    service:
      type: LoadBalancer
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    resources:
      limits:
        cpu: 300m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 256Mi
    extraScrapeConfigs: |
      - job_name: 'falco'
        scrape_interval: 10s
        static_configs:
          - targets: ['monitoring-falco:2801']
        metrics_path: /metrics
        relabel_configs:
          - source_labels: [__address__]
            target_label: instance
            regex: '(.*)'
            replacement: '$1'

grafana:
  persistence:
    enabled: true
    size: 2Gi
  service:
    type: LoadBalancer
    port: 80
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
  adminUser: admin
  adminPassword: admin
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://monitoring-prometheus-server
          access: proxy
          isDefault: true
        - name: Loki
          type: loki
          url: http://monitoring-loki:3100
          access: proxy
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      falco-monitoring:
        json: |
          {
            "annotations": {
              "list": []
            },
            "editable": true,
            "fiscalYearStartMonth": 0,
            "graphTooltip": 0,
            "hideControls": false,
            "links": [],
            "liveNow": false,
            "panels": [
              {
                "datasource": {
                  "type": "prometheus",
                  "uid": "prometheus"
                },
                "fieldConfig": {
                  "defaults": {
                    "color": {
                      "mode": "palette-classic"
                    },
                    "custom": {
                      "axisCenteredZero": false,
                      "axisColorMode": "text",
                      "axisLabel": "",
                      "axisPlacement": "auto",
                      "barAlignment": 0,
                      "drawStyle": "line",
                      "fillOpacity": 0,
                      "gradientMode": "none",
                      "hideFrom": {
                        "legend": false,
                        "tooltip": false,
                        "viz": false
                      },
                      "lineInterpolation": "linear",
                      "lineWidth": 1,
                      "pointSize": 5,
                      "scaleDistribution": {
                        "type": "linear"
                      },
                      "showPoints": "auto",
                      "spanNulls": false,
                      "stacking": {
                        "group": "A",
                        "mode": "none"
                      },
                      "thresholdsStyle": {
                        "mode": "off"
                      }
                    },
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        }
                      ]
                    }
                  },
                  "overrides": []
                },
                "gridPos": {
                  "h": 8,
                  "w": 12,
                  "x": 0,
                  "y": 0
                },
                "id": 1,
                "options": {
                  "legend": {
                    "calcs": [],
                    "displayMode": "list",
                    "placement": "bottom",
                    "showLegend": true
                  },
                  "tooltip": {
                    "mode": "single",
                    "sort": "none"
                  }
                },
                "title": "Events per Second",
                "type": "timeseries",
                "targets": [
                  {
                    "datasource": {
                      "type": "prometheus",
                      "uid": "prometheus"
                    },
                    "editorMode": "code",
                    "expr": "rate(falco_events_total[5m])",
                    "legendFormat": "{{rule}}",
                    "range": true,
                    "refId": "A"
                  }
                ]
              },
              {
                "datasource": {
                  "type": "loki",
                  "uid": "loki"
                },
                "gridPos": {
                  "h": 8,
                  "w": 12,
                  "x": 12,
                  "y": 0
                },
                "id": 2,
                "options": {
                  "dedupStrategy": "none",
                  "enableLogDetails": true,
                  "prettifyLogMessage": false,
                  "showCommonLabels": false,
                  "showLabels": false,
                  "showTime": false,
                  "sortOrder": "Descending",
                  "wrapLogMessage": false
                },
                "title": "Security Events",
                "type": "logs",
                "targets": [
                  {
                    "datasource": {
                      "type": "loki",
                      "uid": "loki"
                    },
                    "expr": "{job=\"falco\"}",
                    "refId": "A"
                  }
                ]
              }
            ],
            "refresh": "5s",
            "schemaVersion": 38,
            "style": "dark",
            "tags": [],
            "templating": {
              "list": []
            },
            "time": {
              "from": "now-1h",
              "to": "now"
            },
            "timepicker": {},
            "timezone": "",
            "title": "Falco Monitoring",
            "weekStart": ""
          }


loki:
  enabled: true
  singleBinary:
    replicas: 1
  persistence:
    enabled: true
    size: 5Gi
  loki:
    auth_enabled: false
    server:
      http_listen_port: 3100
      grpc_listen_port: 9095
    storage:
      type: filesystem
    structuredConfig:
      common:
        instance_addr: 127.0.0.1
        path_prefix: /tmp/loki
        storage:
          filesystem:
            chunks_directory: /tmp/loki/chunks
            rules_directory: /tmp/loki/rules
        replication_factor: 1
        ring:
          kvstore:
            store: inmemory
      schema_config:
        configs:
          - from: 2020-10-24
            store: boltdb-shipper
            object_store: filesystem
            schema: v11
            index:
              prefix: index_
              period: 24h
      limits_config:
        enforce_metric_name: false
        reject_old_samples: true
        reject_old_samples_max_age: 168h
        max_entries_limit_per_query: 5000
        ingestion_rate_mb: 4
        ingestion_burst_size_mb: 6
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi

promtail:
  enabled: true
  config:
    serverPort: 3101
    clients:
      - url: http://monitoring-loki:3100/loki/api/v1/push
        batchwait: 1s
        batchsize: 102400
    positions:
      filename: /run/promtail/positions.yaml
    scrape_configs:
      - job_name: falco-security-logs
        static_configs:
          - targets:
              - localhost
            labels:
              job: falco
              env: pet
              type: security_event
        pipeline_stages:
          - json:
              expressions:
                rule: rule
                output: output
                priority: priority
                time: time
                hostname: hostname
          - timestamp:
              source: time
              format: RFC3339Nano
          - labels:
              rule:
              priority:
              hostname:
    target_config:
      sync_period: "10s"
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi
  tolerations:
    - operator: Exists

falco:
  enabled: true
  driver:
    kind: ebpf
  
  service:
    type: ClusterIP
    port: 2801
    
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

  falco:
    webserver:
      enabled: true
      listenPort: 2801
      ssl: 
        enabled: false
    json_output: true
    file_output:
      enabled: true
      filename: /var/log/falco/falco.log
      keep_alive: true
    log:
      level: info
    buffered_outputs: true
    syscall_event_drops:
      actions:
        - log
      rate: 1
      max_burst: 1
    metrics:
      enabled: true

  customRules:
    rules-falco.yaml: |-
      - rule: Shell in Container
        desc: Shell access detected in container
        condition: >
          spawned_process and container
          and proc.name in (shell_binaries)
          and not container.name in ("falco", "monitoring-promtail", "monitoring-loki")
        output: Shell started in container (user=%user.name container=%container.id shell=%proc.name)
        priority: WARNING
        tags: [shell, container]

      - rule: Suspicious Package Management
        desc: Package management command in container
        condition: >
          spawned_process and container
          and proc.name in (package_mgmt_binaries)
          and not container.name in ("monitoring-promtail", "monitoring-loki")
        output: Package management command in container (user=%user.name container=%container.id command=%proc.cmdline)
        priority: WARNING
        tags: [package, container]

  tolerations:
    - operator: Exists