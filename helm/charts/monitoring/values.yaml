nameOverride: monitoring
fullnameOverride: monitoring

prometheus:
  server:
    persistentVolume:
      enabled: true
      size: 4Gi
    service:
      type: LoadBalancer
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    resources:
      limits:
        cpu: 300m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 256Mi

grafana:
  persistence:
    enabled: true
    size: 2Gi
  service:
    type: LoadBalancer
    port: 80
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
  adminUser: admin
  adminPassword: admin
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://monitoring-prometheus-server
          access: proxy
          isDefault: true
        - name: Loki
          type: loki
          url: http://monitoring-loki:3100
          access: proxy

loki:
  enabled: true
  singleBinary:
    replicas: 1

  persistence:
    enabled: true
    size: 5Gi

  loki:
    auth_enabled: false
    server:
      http_listen_port: 3100
      grpc_listen_port: 9095
      
    storage:
      type: filesystem
      
    structuredConfig:
      common:
        instance_addr: 127.0.0.1
        path_prefix: /tmp/loki
        storage:
          filesystem:
            chunks_directory: /tmp/loki/chunks
            rules_directory: /tmp/loki/rules
        replication_factor: 1
        ring:
          kvstore:
            store: inmemory

      schema_config:
        configs:
          - from: 2020-10-24
            store: boltdb-shipper
            object_store: filesystem
            schema: v11
            index:
              prefix: index_
              period: 24h

      limits_config:
        enforce_metric_name: false
        reject_old_samples: true
        reject_old_samples_max_age: 168h
        max_entries_limit_per_query: 5000
        ingestion_rate_mb: 4
        ingestion_burst_size_mb: 6

  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi

promtail:
  enabled: true
  config:
    serverPort: 3101
    clients:
      - url: http://monitoring-loki:3100/loki/api/v1/push

  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi

  tolerations:
    - operator: Exists


falco:
  enabled: true
  driver:
    kind: ebpf
  
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi

  falco:
    jsonOutput: true
    jsonIncludeOutputProperty: true
    programOutput:
      enabled: true
      program: "curl -d @- -X POST http://monitoring-loki:3100/loki/api/v1/push"

  customRules:
    rules-falco.yaml: |-
      - rule: Shell in Container
        desc: Shell access detected in container
        condition: >
          spawned_process and container
          and proc.name in (shell_binaries)
          and not container.name in ("falco")
        output: Shell started in container (user=%user.name container=%container.id shell=%proc.name)
        priority: WARNING

      - rule: Suspicious Package Management
        desc: Package management command in container
        condition: >
          spawned_process and container
          and proc.name in (package_mgmt_binaries)
        output: Package management command in container (user=%user.name container=%container.id command=%proc.cmdline)
        priority: WARNING

  tolerations:
    - operator: Exists