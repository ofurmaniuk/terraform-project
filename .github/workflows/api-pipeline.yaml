name: API-Pipeline-Fresh

on:
  workflow_dispatch:    
  push:
    branches: [ "main" ]
    paths:
      - "apps/api/**"   
      - ".github/workflows/api-pipeline.yaml"
      - "apps/api/sonar-project.properties"
  pull_request:
    branches: [ "main" ]
    paths:
      - "apps/api/**" 
      - ".github/workflows/api-pipeline.yaml"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        working-directory: ./apps/api
        run: |
          npm install
          npm install --save-dev eslint@8.56.0 \
                               prettier \
                               eslint-config-prettier \
                               eslint-plugin-prettier

      - name: Run ESLint
        working-directory: ./apps/api
        run: ./node_modules/.bin/eslint . --max-warnings 999 || true

  sonarcloud:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
            projectBaseDir: apps/api
            args: >
              -Dsonar.organization=ofurmaniuk
              -Dsonar.projectKey=ofurmaniuk_terraform-project

  docker:
    needs: sonarcloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push API image
        uses: docker/build-push-action@v4
        with:
          context: ./apps/api
          push: true
          tags: ofurmaniuk/app-api:latest,ofurmaniuk/app-api:${{ github.sha }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ofurmaniuk/app-api:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'