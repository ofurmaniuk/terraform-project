grafana:
  service:
    type: LoadBalancer
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: nlb
      service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
      service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    ports:
      - port: 80
        targetPort: 3000
        protocol: TCP
  persistence:
    enabled: true
    size: 10Gi
    storageClassName: gp2
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi
  adminUser: admin
  adminPassword: admin
  datasources:
    datasources.yaml:
      apiVersion: 1
      deleteDatasources:
        - name: Prometheus
          orgId: 1
        - name: Loki
          orgId: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://monitoring-prometheus-server
          access: proxy
          isDefault: true
        - name: Loki
          type: loki
          url: http://monitoring-loki:3100
          access: proxy
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards

prometheus:
  alertmanager:
    enabled: false
  server:
    persistentVolume:
      enabled: true
      size: 10Gi
      storageClassName: gp2
    service:
      type: LoadBalancer
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: nlb
        service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
        service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi

loki:
  enabled: true
  singleBinary:
    enabled: true
    replicas: 1
    extraArgs:
      - --config.expand-env=true
      - --config.file=/etc/loki/config/config.yaml
  persistence:
    enabled: true
    size: 10Gi
    storageClassName: gp2
  resources:
    limits:
      cpu: 1000m 
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  config:
    auth_enabled: false
    server:
      http_listen_port: 3100
      grpc_listen_port: 9095
      log_level: info
    ingester:
      max_chunk_age: 1h
      lifecycler:
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
    storage:
      type: filesystem
    schema_config:
      configs:
        - from: "2020-10-24"
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h
    storage_config:
      boltdb_shipper:
        active_index_directory: /data/loki/index
        cache_location: /data/loki/cache
        shared_store: filesystem

promtail:
  enabled: true
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi
  serviceMonitor:
    enabled: true
  config:
    server:
      http_listen_port: 3101
    clients:
      - url: http://monitoring-loki.monitoring.svc:3100/loki/api/v1/push
    positions:
      filename: /run/promtail/positions.yaml
    scrape_configs:
      - job_name: kubernetes-pods
        pipeline_stages:
          - docker: {}
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_node_name]
            target_label: node_name
          - source_labels: [__meta_kubernetes_namespace]
            target_label: namespace  
          - source_labels: [__meta_kubernetes_pod_name]
            target_label: pod
          - source_labels: [__meta_kubernetes_container_name]
            target_label: container