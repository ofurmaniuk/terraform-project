grafana:
  service:
    type: LoadBalancer
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: nlb
      service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
      service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    ports:
      - port: 80
        targetPort: 3000
        protocol: TCP
  persistence:
    enabled: true
    size: 2Gi
    storageClassName: gp2
    volumeBindingMode: WaitForFirstConsumer
    accessModes:
      - ReadWriteOnce
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://prometheus-server:9090
          isDefault: true
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards

prometheus:
  server:
    persistentVolume:
      enabled: true
      size: 10Gi
      storageClassName: gp2
      volumeBindingMode: WaitForFirstConsumer
      accessModes:
        - ReadWriteOnce
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 300m
        memory: 512Mi
  
  alertmanager:
    enabled: true
    persistentVolume:
      enabled: true
      size: 5Gi
      storageClassName: gp2
      volumeBindingMode: WaitForFirstConsumer
      accessModes:
        - ReadWriteOnce
    resources:
      limits:
        cpu: 100m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 128Mi
  
  pushgateway:
    enabled: true
  
  nodeExporter:
    enabled: true